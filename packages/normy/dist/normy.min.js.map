{"version":3,"file":"normy.min.js","mappings":"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","sources":["webpack://Normy/webpack/universalModuleDefinition","webpack://Normy/../../node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js","webpack://Normy/webpack/bootstrap","webpack://Normy/webpack/runtime/compat get default export","webpack://Normy/webpack/runtime/define property getters","webpack://Normy/webpack/runtime/hasOwnProperty shorthand","webpack://Normy/webpack/runtime/make namespace object","webpack://Normy/../../node_modules/.pnpm/@babel+runtime@7.23.5/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Normy/./src/add-or-remove-dependencies.ts","webpack://Normy/./src/default-config.ts","webpack://Normy/./src/denormalize.ts","webpack://Normy/./src/merge-data.ts","webpack://Normy/./src/normalize.ts","webpack://Normy/./src/create-normalizer.ts","webpack://Normy/./src/get-dependencies-diff.ts","webpack://Normy/./src/get-queries-dependent-on-mutation.ts","webpack://Normy/./src/get-id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Normy\"] = factory();\n\telse\n\t\troot[\"Normy\"] = factory();\n})(self, () => {\nreturn ","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import { NormalizedData } from './types';\n\nexport const addOrRemoveDependencies = (\n  dependentQueries: NormalizedData['dependentQueries'],\n  objects: NormalizedData['objects'],\n  queryKey: string,\n  dependenciesToAdd: ReadonlyArray<string>,\n  dependenciesToRemove: ReadonlyArray<string>,\n) => {\n  dependentQueries = { ...dependentQueries };\n  objects = { ...objects };\n\n  dependenciesToAdd.forEach(dependency => {\n    if (!dependentQueries[dependency]) {\n      dependentQueries[dependency] = [queryKey];\n    }\n\n    if (!dependentQueries[dependency].includes(queryKey)) {\n      dependentQueries[dependency] = [\n        ...dependentQueries[dependency],\n        queryKey,\n      ];\n    }\n  });\n\n  dependenciesToRemove.forEach(dependency => {\n    if (dependentQueries[dependency].length > 1) {\n      dependentQueries[dependency] = dependentQueries[dependency].filter(\n        v => v !== queryKey,\n      );\n    } else {\n      delete dependentQueries[dependency];\n      delete objects[dependency];\n    }\n  });\n\n  return { dependentQueries, objects };\n};\n","import { NormalizerConfig } from './types';\n\nexport const defaultConfig: Required<NormalizerConfig> = {\n  getNormalizationObjectKey: obj => obj.id as string | undefined,\n  devLogging: false,\n  structuralSharing: true,\n};\n","import { Data, DataObject, DataPrimitiveArray, UsedKeys } from './types';\n\nexport const denormalize = (\n  data: Data,\n  normalizedData: { [key: string]: Data },\n  usedKeys: UsedKeys,\n  path = '',\n): Data => {\n  if (typeof data === 'string' && data.startsWith('@@')) {\n    return denormalize(normalizedData[data], normalizedData, usedKeys, path);\n  } else if (Array.isArray(data)) {\n    return data.map(value =>\n      denormalize(value, normalizedData, usedKeys, path),\n    ) as DataPrimitiveArray | DataObject[];\n  } else if (\n    data !== null &&\n    typeof data === 'object' &&\n    !(data instanceof Date)\n  ) {\n    const objectEntries = usedKeys[path]\n      ? Object.entries(data).filter(([k]) => usedKeys[path].includes(k))\n      : Object.entries(data);\n\n    return objectEntries.reduce((prev, [k, v]) => {\n      prev[k] = denormalize(v, normalizedData, usedKeys, `${path}.${k}`);\n\n      return prev;\n    }, {} as DataObject);\n  }\n\n  return data;\n};\n","import deepmerge from 'deepmerge';\n\nimport { Data } from './types';\n\nexport const mergeData = <T = Data>(oldData: T, newData: T) =>\n  deepmerge<T>(oldData, newData, {\n    arrayMerge: (destinationArray: Data[], sourceArray: Data[]) => sourceArray,\n    clone: false,\n  });\n","import { defaultConfig } from './default-config';\nimport { mergeData } from './merge-data';\nimport {\n  Data,\n  NormalizerConfig,\n  DataPrimitiveArray,\n  DataObject,\n  UsedKeys,\n} from './types';\n\nconst stipFromDeps = (\n  data: Data,\n  config: Required<NormalizerConfig>,\n  root = true,\n): Data => {\n  if (Array.isArray(data)) {\n    return data.map(v => stipFromDeps(v, config)) as\n      | DataPrimitiveArray\n      | DataObject[];\n  }\n\n  if (data !== null && typeof data === 'object' && !(data instanceof Date)) {\n    const objectKey = config.getNormalizationObjectKey(data);\n\n    if (objectKey !== undefined && root) {\n      return `@@${objectKey}`;\n    }\n\n    return Object.entries(data).reduce((prev, [k, v]) => {\n      prev[k] = stipFromDeps(v, config);\n\n      return prev;\n    }, {} as DataObject);\n  }\n\n  return data;\n};\n\nexport const getDependencies = (\n  data: Data,\n  config = defaultConfig,\n  usedKeys?: UsedKeys,\n  path = '',\n): [DataObject[], UsedKeys] => {\n  usedKeys = usedKeys || {};\n\n  if (Array.isArray(data)) {\n    return [\n      (data as DataObject[]).reduce(\n        (prev: DataObject[], current: Data) => [\n          ...prev,\n          ...getDependencies(current, config, usedKeys, path)[0],\n        ],\n        [] as DataObject[],\n      ),\n      usedKeys,\n    ];\n  }\n\n  if (data !== null && typeof data === 'object' && !(data instanceof Date)) {\n    if (config.getNormalizationObjectKey(data) !== undefined) {\n      usedKeys[path] = Object.keys(data);\n    }\n\n    return [\n      Object.entries(data).reduce(\n        (prev, [k, v]) => [\n          ...prev,\n          ...getDependencies(v, config, usedKeys, `${path}.${k}`)[0],\n        ],\n        config.getNormalizationObjectKey(data) !== undefined ? [data] : [],\n      ),\n      usedKeys,\n    ];\n  }\n\n  return [[], usedKeys];\n};\n\nexport const normalize = (\n  data: Data,\n  config = defaultConfig,\n): [Data, { [objectId: string]: DataObject }, UsedKeys] => {\n  const [dependencies, usedKeys] = getDependencies(data, config);\n\n  return [\n    stipFromDeps(data, config, true),\n    dependencies.reduce(\n      (prev, v) => {\n        const key = config.getNormalizationObjectKey(v) as string;\n\n        prev[`@@${key}`] = prev[`@@${key}`]\n          ? mergeData(prev[`@@${key}`], stipFromDeps(v, config, false))\n          : stipFromDeps(v, config, false);\n\n        return prev;\n      },\n      {} as { [objectId: string]: DataObject },\n    ) as {\n      [objectId: string]: DataObject;\n    },\n    usedKeys,\n  ];\n};\n","import { addOrRemoveDependencies } from './add-or-remove-dependencies';\nimport { defaultConfig } from './default-config';\nimport { denormalize } from './denormalize';\nimport { getDependenciesDiff } from './get-dependencies-diff';\nimport { getQueriesDependentOnMutation } from './get-queries-dependent-on-mutation';\nimport { mergeData } from './merge-data';\nimport { normalize } from './normalize';\nimport { Data, DataObject, NormalizedData, NormalizerConfig } from './types';\nimport { warning } from './warning';\n\nconst initialData: NormalizedData = {\n  queries: {},\n  objects: {},\n  dependentQueries: {},\n};\n\nconst isMutationObjectDifferent = (\n  mutationData: Data,\n  normalizedData: Data,\n): boolean => {\n  if (Array.isArray(mutationData) && Array.isArray(normalizedData)) {\n    if (mutationData.length === 0) {\n      return normalizedData.length !== 0;\n    }\n\n    return mutationData.some((v, i) =>\n      isMutationObjectDifferent(v, (normalizedData as Data[])[i]),\n    );\n  }\n\n  if (mutationData instanceof Date && normalizedData instanceof Date) {\n    return mutationData.getTime() !== normalizedData.getTime();\n  }\n\n  if (\n    mutationData !== null &&\n    typeof mutationData === 'object' &&\n    normalizedData !== null &&\n    typeof normalizedData === 'object'\n  ) {\n    return Object.entries(mutationData).some(\n      ([key, value]) =>\n        (normalizedData as DataObject)?.[key] !== undefined &&\n        isMutationObjectDifferent(\n          value as Data,\n          (normalizedData as DataObject)[key],\n        ),\n    );\n  }\n\n  return mutationData !== normalizedData;\n};\n\nexport const createNormalizer = (\n  normalizerConfig?: NormalizerConfig,\n  initialNormalizedData?: NormalizedData,\n) => {\n  const config = { ...defaultConfig, ...normalizerConfig };\n\n  let normalizedData: NormalizedData = initialNormalizedData ?? initialData;\n  let currentDataReferences: Record<string, Data> = {};\n\n  const setQuery = (queryKey: string, queryData: Data) => {\n    if (config.structuralSharing) {\n      if (currentDataReferences[queryKey] === queryData) {\n        return;\n      }\n\n      currentDataReferences[queryKey] = queryData;\n    }\n\n    const [normalizedQueryData, normalizedObjectsData, usedKeys] = normalize(\n      queryData,\n      config,\n    );\n\n    const { addedDependencies, removedDependencies } = getDependenciesDiff(\n      normalizedData.queries[queryKey]\n        ? normalizedData.queries[queryKey].dependencies\n        : [],\n      Object.keys(normalizedObjectsData),\n    );\n\n    normalizedData = {\n      queries: {\n        ...normalizedData.queries,\n        [queryKey]: {\n          data: normalizedQueryData,\n          usedKeys,\n          dependencies: Object.keys(normalizedObjectsData),\n        },\n      },\n      ...addOrRemoveDependencies(\n        normalizedData.dependentQueries,\n        mergeData(normalizedData.objects, normalizedObjectsData),\n        queryKey,\n        addedDependencies,\n        removedDependencies,\n      ),\n    };\n\n    warning(\n      config.devLogging,\n      'set query:',\n      queryKey,\n      '\\nwith data:',\n      queryData,\n      '\\nnormalizedData:',\n      normalizedData,\n    );\n  };\n\n  const removeQuery = (queryKey: string) => {\n    setQuery(queryKey, null);\n\n    const queries = { ...normalizedData.queries };\n    delete queries[queryKey];\n    delete currentDataReferences[queryKey];\n\n    normalizedData = {\n      ...normalizedData,\n      queries,\n    };\n\n    warning(\n      config.devLogging,\n      'removed query:',\n      queryKey,\n      '\\nnormalizedData:',\n      normalizedData,\n    );\n  };\n\n  const filterMutationObjects = (\n    mutationObjects: DataObject,\n    normalizedDataObjects: DataObject,\n  ) => {\n    const differentObjects: DataObject = {};\n\n    for (const key in mutationObjects) {\n      if (\n        isMutationObjectDifferent(\n          mutationObjects[key],\n          normalizedDataObjects[key],\n        )\n      ) {\n        differentObjects[key] = mutationObjects[key];\n      }\n    }\n\n    return differentObjects;\n  };\n\n  const getQueriesById = (\n    mutationDependencies: ReadonlyArray<string> | Readonly<string>,\n  ) =>\n    getQueriesDependentOnMutation(\n      normalizedData.dependentQueries,\n      Array.isArray(mutationDependencies)\n        ? mutationDependencies\n        : [mutationDependencies],\n    );\n\n  const getQueriesToUpdate = (mutationData: Data) => {\n    const [, normalizedObjectsData] = normalize(mutationData, config);\n\n    const updatedObjects = filterMutationObjects(\n      normalizedObjectsData,\n      normalizedData.objects,\n    );\n\n    const normalizedDataWithMutation = mergeData(\n      normalizedData.objects,\n      updatedObjects,\n    );\n\n    const foundQueries = getQueriesById(Object.keys(updatedObjects));\n\n    return foundQueries.map(queryKey => ({\n      queryKey,\n      data: denormalize(\n        normalizedData.queries[queryKey].data,\n        normalizedDataWithMutation,\n        normalizedData.queries[queryKey].usedKeys,\n      ),\n    }));\n  };\n\n  const getQueryFragment = <T extends Data>(\n    fragment: Data,\n    exampleObject?: T,\n  ): T | undefined => {\n    let usedKeys = {};\n\n    if (exampleObject) {\n      const [, , keys] = normalize(exampleObject, config);\n      usedKeys = keys;\n    }\n\n    try {\n      const response = denormalize(fragment, normalizedData.objects, usedKeys);\n      return response as T;\n    } catch (error) {\n      if (error instanceof RangeError) {\n        warning(\n          true,\n          'Recursive dependency detected. Pass example object as second argument.',\n        );\n\n        return undefined;\n      }\n\n      throw error;\n    }\n  };\n\n  const getObjectById = <T extends Data>(\n    id: string,\n    exampleObject?: T,\n  ): T | undefined => getQueryFragment(`@@${id}`, exampleObject);\n\n  return {\n    getNormalizedData: () => normalizedData,\n    clearNormalizedData: () => {\n      normalizedData = initialData;\n      currentDataReferences = {};\n    },\n    getQueriesById,\n    setQuery,\n    removeQuery,\n    getQueriesToUpdate,\n    getObjectById,\n    getQueryFragment,\n  };\n};\n","export const getDependenciesDiff = (\n  oldDependencies: ReadonlyArray<string>,\n  newDependencies: ReadonlyArray<string>,\n) => ({\n  addedDependencies: newDependencies.filter(\n    newDependency => !oldDependencies.includes(newDependency),\n  ),\n  removedDependencies: oldDependencies.filter(\n    oldDependency => !newDependencies.includes(oldDependency),\n  ),\n});\n","import { NormalizedData } from './types';\n\nexport const getQueriesDependentOnMutation = (\n  dependentQueries: NormalizedData['dependentQueries'],\n  mutationDependencies: ReadonlyArray<string>,\n): ReadonlyArray<string> => {\n  const queries: string[] = [];\n\n  mutationDependencies.forEach(dependency => {\n    if (dependentQueries[dependency]) {\n      queries.push(...dependentQueries[dependency]);\n    }\n  });\n\n  return Array.from(new Set(queries));\n};\n","export const getId = (id: string) => `@@${id}`;\n"],"names":["root","factory","exports","module","define","amd","self","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","r","toStringTag","_extends","assign","bind","i","arguments","length","apply","this","defaultConfig","getNormalizationObjectKey","id","devLogging","structuralSharing","denormalize","data","normalizedData","usedKeys","path","startsWith","Date","entries","_ref","k","includes","_ref2","v","mergeData","oldData","newData","destinationArray","sourceArray","stipFromDeps","config","objectKey","getDependencies","current","normalize","_getDependencies","dependencies","initialData","queries","objects","dependentQueries","isMutationObjectDifferent","mutationData","some","getTime","createNormalizer","normalizerConfig","initialNormalizedData","currentDataReferences","setQuery","queryKey","queryData","_extends2","oldDependencies","newDependencies","_normalize","normalizedQueryData","normalizedObjectsData","_getDependenciesDiff","addedDependencies","newDependency","removedDependencies","oldDependency","dependenciesToAdd","dependenciesToRemove","dependency","addOrRemoveDependencies","getQueriesById","mutationDependencies","push","from","Set","getQueriesDependentOnMutation","getQueryFragment","fragment","exampleObject","error","RangeError","getNormalizedData","clearNormalizedData","removeQuery","getQueriesToUpdate","updatedObjects","mutationObjects","normalizedDataObjects","differentObjects","filterMutationObjects","normalizedDataWithMutation","getObjectById","getId"],"sourceRoot":""}